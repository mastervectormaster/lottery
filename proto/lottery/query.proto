syntax = "proto3";
package mastervectormaster.lottery.lottery;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "lottery/params.proto";
import "lottery/tx_counter.proto";
import "lottery/user.proto";
import "lottery/bet.proto";
// this line is used by starport scaffolding # 1

option go_package = "github.com/mastervectormaster/lottery/x/lottery/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/mastervectormaster/lottery/lottery/params";
  }
  // Queries a TxCounter by index.
	rpc TxCounter(QueryGetTxCounterRequest) returns (QueryGetTxCounterResponse) {
		option (google.api.http).get = "/mastervectormaster/lottery/lottery/tx_counter";
	}
// Queries a User by id.
	rpc User(QueryGetUserRequest) returns (QueryGetUserResponse) {
		option (google.api.http).get = "/mastervectormaster/lottery/lottery/user/{id}";
	}

	// Queries a list of User items.
	rpc UserAll(QueryAllUserRequest) returns (QueryAllUserResponse) {
		option (google.api.http).get = "/mastervectormaster/lottery/lottery/user";
	}

// Queries a Bet by index.
	rpc Bet(QueryGetBetRequest) returns (QueryGetBetResponse) {
		option (google.api.http).get = "/mastervectormaster/lottery/lottery/bet/{index}";
	}

	// Queries a list of Bet items.
	rpc BetAll(QueryAllBetRequest) returns (QueryAllBetResponse) {
		option (google.api.http).get = "/mastervectormaster/lottery/lottery/bet";
	}

// this line is used by starport scaffolding # 2
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryGetTxCounterRequest {}

message QueryGetTxCounterResponse {
	TxCounter TxCounter = 1 [(gogoproto.nullable) = false];
}
message QueryGetUserRequest {
	uint64 id = 1;
}

message QueryGetUserResponse {
	User User = 1 [(gogoproto.nullable) = false];
}

message QueryAllUserRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllUserResponse {
	repeated User User = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetBetRequest {
	  string index = 1;

}

message QueryGetBetResponse {
	Bet bet = 1 [(gogoproto.nullable) = false];
}

message QueryAllBetRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllBetResponse {
	repeated Bet bet = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// this line is used by starport scaffolding # 3
